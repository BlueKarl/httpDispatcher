/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: iplookup.i

package iplookup

/*
#cgo CFLAGS: -Wall  -I/usr/local/opt/libiconv/include
#cgo CXXFLAGS:  -Wall  -I/usr/local/opt/libiconv/include
#cgo LDFLAGS: -L/usr/local/opt/libiconv/lib  -liconv -lpthread

#define intgo swig_intgo
typedef void *swig_voidp;

#include <stdint.h>


typedef long long intgo;
typedef unsigned long long uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;


typedef _gostring_ swig_type_1;
typedef _gostring_ swig_type_2;
typedef _gostring_ swig_type_3;
typedef _gostring_ swig_type_4;
typedef _gostring_ swig_type_5;
typedef _gostring_ swig_type_6;
typedef _gostring_ swig_type_7;
typedef _gostring_ swig_type_8;
typedef _gostring_ swig_type_9;
typedef _gostring_ swig_type_10;
typedef _gostring_ swig_type_11;
typedef _gostring_ swig_type_12;
typedef _gostring_ swig_type_13;
typedef _gostring_ swig_type_14;
typedef _gostring_ swig_type_15;
typedef _gostring_ swig_type_16;
typedef _gostring_ swig_type_17;
typedef _gostring_ swig_type_18;
typedef _gostring_ swig_type_19;
typedef _gostring_ swig_type_20;
typedef _gostring_ swig_type_21;
typedef _gostring_ swig_type_22;
typedef _gostring_ swig_type_23;
typedef _gostring_ swig_type_24;
typedef _gostring_ swig_type_25;
typedef _gostring_ swig_type_26;
typedef _gostring_ swig_type_27;
typedef _gostring_ swig_type_28;
typedef _gostring_ swig_type_29;
typedef _gostring_ swig_type_30;
typedef _gostring_ swig_type_31;
typedef _gostring_ swig_type_32;
typedef _gostring_ swig_type_33;
typedef _gostring_ swig_type_34;
extern void _wrap_Swig_free_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern swig_intgo _wrap_text_iplookup_cd10677ac3a321f0(void);
extern swig_intgo _wrap_id_code_iplookup_cd10677ac3a321f0(void);
extern swig_intgo _wrap_iso_code_iplookup_cd10677ac3a321f0(void);
extern swig_intgo _wrap_max_code_iplookup_cd10677ac3a321f0(void);
extern uintptr_t _wrap_il_open__SWIG_0_iplookup_cd10677ac3a321f0(swig_type_1 arg1);
extern uintptr_t _wrap_il_open__SWIG_1_iplookup_cd10677ac3a321f0(void);
extern void _wrap_il_close_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern swig_intgo _wrap_il_search__SWIG_0_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern swig_intgo _wrap_il_search__SWIG_1_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_il_bin2human_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2, swig_intgo arg3);
extern uintptr_t _wrap_il_iplookup__SWIG_0_iplookup_cd10677ac3a321f0(swig_type_2 arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4, swig_type_3 arg5);
extern uintptr_t _wrap_il_iplookup__SWIG_1_iplookup_cd10677ac3a321f0(swig_type_4 arg1, uintptr_t arg2, uintptr_t arg3, swig_intgo arg4);
extern uintptr_t _wrap_il_iplookup__SWIG_2_iplookup_cd10677ac3a321f0(swig_type_5 arg1, uintptr_t arg2, uintptr_t arg3);
extern uintptr_t _wrap_il_iplookup__SWIG_3_iplookup_cd10677ac3a321f0(swig_type_6 arg1, uintptr_t arg2);
extern void _wrap_ip_valid_set_iplookup_cd10677ac3a321f0(swig_intgo arg1);
extern swig_intgo _wrap_ip_valid_get_iplookup_cd10677ac3a321f0(void);
extern void _wrap_ip_in_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ip_in_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern uintptr_t _wrap_new_ip__SWIG_0_iplookup_cd10677ac3a321f0(void);
extern uintptr_t _wrap_new_ip__SWIG_1_iplookup_cd10677ac3a321f0(swig_type_7 arg1);
extern swig_type_8 _wrap_ip_ntop_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_9 arg2);
extern _Bool _wrap_ip_belong_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2, uintptr_t arg3);
extern void _wrap_delete_ip_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern swig_type_10 _wrap_PACKAGE_URL_iplookup_cd10677ac3a321f0(void);
extern void _wrap_ipitem_start_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_11 arg2);
extern swig_type_12 _wrap_ipitem_start_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_end_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_13 arg2);
extern swig_type_14 _wrap_ipitem_end_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_isp_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_15 arg2);
extern swig_type_16 _wrap_ipitem_isp_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_Xtype_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_17 arg2);
extern swig_type_18 _wrap_ipitem_Xtype_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_country_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_19 arg2);
extern swig_type_20 _wrap_ipitem_country_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_province_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_21 arg2);
extern swig_type_22 _wrap_ipitem_province_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_city_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_23 arg2);
extern swig_type_24 _wrap_ipitem_city_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_district_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_25 arg2);
extern swig_type_26 _wrap_ipitem_district_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipitem_desc_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_27 arg2);
extern swig_type_28 _wrap_ipitem_desc_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern uintptr_t _wrap_new_ipitem_iplookup_cd10677ac3a321f0(void);
extern void _wrap_delete_ipitem_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_start_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ipinfo_start_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_end_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, uintptr_t arg2);
extern uintptr_t _wrap_ipinfo_end_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_isp_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_isp_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_Xtype_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_Xtype_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_country_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_country_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_province_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_province_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_city_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_city_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_district_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, short arg2);
extern short _wrap_ipinfo_district_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern void _wrap_ipinfo_desc_set_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_29 arg2);
extern swig_type_30 _wrap_ipinfo_desc_get_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern uintptr_t _wrap_new_ipinfo_iplookup_cd10677ac3a321f0(void);
extern void _wrap_delete_ipinfo_iplookup_cd10677ac3a321f0(uintptr_t arg1);
extern swig_type_31 _wrap_iconv_ext_iplookup_cd10677ac3a321f0(uintptr_t arg1, swig_type_32 arg2);
extern swig_type_33 _wrap_itoa_iplookup_cd10677ac3a321f0(swig_intgo arg1, swig_type_34 arg2);
#undef intgo
*/
import "C"

import "unsafe"
import _ "runtime/cgo"
import "sync"

type _ unsafe.Pointer

var Swig_escape_always_false bool
var Swig_escape_val interface{}

type _swig_fnptr *byte
type _swig_memberptr *byte

type _ sync.Mutex

type swig_gostring struct {
	p uintptr
	n int
}

func swigCopyString(s string) string {
	p := *(*swig_gostring)(unsafe.Pointer(&s))
	r := string((*[0x7fffffff]byte)(unsafe.Pointer(p.p))[:p.n])
	Swig_free(p.p)
	return r
}

func Swig_free(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_Swig_free_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
}

type Data_type int

func _swig_gettext() (_swig_ret Data_type) {
	var swig_r Data_type
	swig_r = (Data_type)(C._wrap_text_iplookup_cd10677ac3a321f0())
	return swig_r
}

var Text Data_type = _swig_gettext()

func _swig_getid_code() (_swig_ret Data_type) {
	var swig_r Data_type
	swig_r = (Data_type)(C._wrap_id_code_iplookup_cd10677ac3a321f0())
	return swig_r
}

var Id_code Data_type = _swig_getid_code()

func _swig_getiso_code() (_swig_ret Data_type) {
	var swig_r Data_type
	swig_r = (Data_type)(C._wrap_iso_code_iplookup_cd10677ac3a321f0())
	return swig_r
}

var Iso_code Data_type = _swig_getiso_code()

func _swig_getmax_code() (_swig_ret Data_type) {
	var swig_r Data_type
	swig_r = (Data_type)(C._wrap_max_code_iplookup_cd10677ac3a321f0())
	return swig_r
}

var Max_code Data_type = _swig_getmax_code()

func Il_open__SWIG_0(arg1 string) (_swig_ret uintptr) {
	var swig_r uintptr
	_swig_i_0 := arg1
	swig_r = (uintptr)(C._wrap_il_open__SWIG_0_iplookup_cd10677ac3a321f0(*(*C.swig_type_1)(unsafe.Pointer(&_swig_i_0))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Il_open__SWIG_1() (_swig_ret uintptr) {
	var swig_r uintptr
	swig_r = (uintptr)(C._wrap_il_open__SWIG_1_iplookup_cd10677ac3a321f0())
	return swig_r
}

func Il_open(a ...interface{}) uintptr {
	argc := len(a)
	if argc == 0 {
		return Il_open__SWIG_1()
	}
	if argc == 1 {
		return Il_open__SWIG_0(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func Il_close(arg1 uintptr) {
	_swig_i_0 := arg1
	C._wrap_il_close_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
}

func Il_search__SWIG_0(arg1 Ip, arg2 Ipinfo, arg3 uintptr) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (int)(C._wrap_il_search__SWIG_0_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func Il_search__SWIG_1(arg1 Ip, arg2 Ipinfo) (_swig_ret int) {
	var swig_r int
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (int)(C._wrap_il_search__SWIG_1_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1)))
	return swig_r
}

func Il_search(a ...interface{}) int {
	argc := len(a)
	if argc == 2 {
		return Il_search__SWIG_1(a[0].(Ip), a[1].(Ipinfo))
	}
	if argc == 3 {
		return Il_search__SWIG_0(a[0].(Ip), a[1].(Ipinfo), a[2].(uintptr))
	}
	panic("No match for overloaded function call")
}

func Il_bin2human(arg1 Ipinfo, arg2 Ipitem, arg3 Data_type) (_swig_ret Ipitem) {
	var swig_r Ipitem
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_il_bin2human_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.swig_intgo(_swig_i_2))))
	return swig_r
}

func Il_iplookup__SWIG_0(arg1 string, arg2 Ipitem, arg3 uintptr, arg4 Data_type, arg5 string) (_swig_ret Ipitem) {
	var swig_r Ipitem
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	_swig_i_4 := arg5
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_il_iplookup__SWIG_0_iplookup_cd10677ac3a321f0(*(*C.swig_type_2)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3), *(*C.swig_type_3)(unsafe.Pointer(&_swig_i_4)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	if Swig_escape_always_false {
		Swig_escape_val = arg5
	}
	return swig_r
}

func Il_iplookup__SWIG_1(arg1 string, arg2 Ipitem, arg3 uintptr, arg4 Data_type) (_swig_ret Ipitem) {
	var swig_r Ipitem
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	_swig_i_3 := arg4
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_il_iplookup__SWIG_1_iplookup_cd10677ac3a321f0(*(*C.swig_type_4)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2), C.swig_intgo(_swig_i_3))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Il_iplookup__SWIG_2(arg1 string, arg2 Ipitem, arg3 uintptr) (_swig_ret Ipitem) {
	var swig_r Ipitem
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_il_iplookup__SWIG_2_iplookup_cd10677ac3a321f0(*(*C.swig_type_5)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Il_iplookup__SWIG_3(arg1 string, arg2 Ipitem) (_swig_ret Ipitem) {
	var swig_r Ipitem
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_il_iplookup__SWIG_3_iplookup_cd10677ac3a321f0(*(*C.swig_type_6)(unsafe.Pointer(&_swig_i_0)), C.uintptr_t(_swig_i_1))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func Il_iplookup(a ...interface{}) Ipitem {
	argc := len(a)
	if argc == 2 {
		return Il_iplookup__SWIG_3(a[0].(string), a[1].(Ipitem))
	}
	if argc == 3 {
		return Il_iplookup__SWIG_2(a[0].(string), a[1].(Ipitem), a[2].(uintptr))
	}
	if argc == 4 {
		return Il_iplookup__SWIG_1(a[0].(string), a[1].(Ipitem), a[2].(uintptr), a[3].(Data_type))
	}
	if argc == 5 {
		return Il_iplookup__SWIG_0(a[0].(string), a[1].(Ipitem), a[2].(uintptr), a[3].(Data_type), a[4].(string))
	}
	panic("No match for overloaded function call")
}

const IP_STRING_LENGTH int = 16

type SwigcptrIp uintptr

func (p SwigcptrIp) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIp) SwigIsIp() {
}

func SetIpValid(arg1 int) {
	_swig_i_0 := arg1
	C._wrap_ip_valid_set_iplookup_cd10677ac3a321f0(C.swig_intgo(_swig_i_0))
}

func GetIpValid() (_swig_ret int) {
	var swig_r int
	swig_r = (int)(C._wrap_ip_valid_get_iplookup_cd10677ac3a321f0())
	return swig_r
}

func (arg1 SwigcptrIp) SetIn(arg2 In_addr) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ip_in_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIp) GetIn() (_swig_ret In_addr) {
	var swig_r In_addr
	_swig_i_0 := arg1
	swig_r = (In_addr)(SwigcptrIn_addr(C._wrap_ip_in_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func NewIp__SWIG_0() (_swig_ret Ip) {
	var swig_r Ip
	swig_r = (Ip)(SwigcptrIp(C._wrap_new_ip__SWIG_0_iplookup_cd10677ac3a321f0()))
	return swig_r
}

func NewIp__SWIG_1(arg1 string) (_swig_ret Ip) {
	var swig_r Ip
	_swig_i_0 := arg1
	swig_r = (Ip)(SwigcptrIp(C._wrap_new_ip__SWIG_1_iplookup_cd10677ac3a321f0(*(*C.swig_type_7)(unsafe.Pointer(&_swig_i_0)))))
	if Swig_escape_always_false {
		Swig_escape_val = arg1
	}
	return swig_r
}

func NewIp(a ...interface{}) Ip {
	argc := len(a)
	if argc == 0 {
		return NewIp__SWIG_0()
	}
	if argc == 1 {
		return NewIp__SWIG_1(a[0].(string))
	}
	panic("No match for overloaded function call")
}

func (arg1 SwigcptrIp) Ntop(arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_ip_ntop_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_9)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIp) Belong(arg2 Ip, arg3 Ip) (_swig_ret bool) {
	var swig_r bool
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	_swig_i_2 := arg3.Swigcptr()
	swig_r = (bool)(C._wrap_ip_belong_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1), C.uintptr_t(_swig_i_2)))
	return swig_r
}

func DeleteIp(arg1 Ip) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ip_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
}

type Ip interface {
	Swigcptr() uintptr
	SwigIsIp()
	SetIn(arg2 In_addr)
	GetIn() (_swig_ret In_addr)
	Ntop(arg2 string) (_swig_ret string)
	Belong(arg2 Ip, arg3 Ip) (_swig_ret bool)
}

const HAVE_ARPA_INET_H int = 1
const HAVE_DLFCN_H int = 1
const HAVE_FCNTL_H int = 1
const HAVE_INTTYPES_H int = 1
const HAVE_MALLOC int = 1
const HAVE_MEMMOVE int = 1
const HAVE_MEMORY_H int = 1
const HAVE_MEMSET int = 1
const HAVE_NETINET_IN_H int = 1
const HAVE_STDBOOL_H int = 1
const HAVE_STDINT_H int = 1
const HAVE_STDLIB_H int = 1
const HAVE_STRCASECMP int = 1
const HAVE_STRERROR int = 1
const HAVE_STRINGS_H int = 1
const HAVE_STRING_H int = 1
const HAVE_SYS_SOCKET_H int = 1
const HAVE_SYS_STAT_H int = 1
const HAVE_SYS_TYPES_H int = 1
const HAVE_UNISTD_H int = 1
const HAVE__BOOL int = 1
const LT_OBJDIR string = ".libs/"
const PACKAGE string = "iplookup"
const PACKAGE_NAME string = "iplookup"
const PACKAGE_STRING string = "iplookup 1.2.3"
const PACKAGE_TARNAME string = "iplookup"

func _swig_getPACKAGE_URL() (_swig_ret string) {
	var swig_r string
	swig_r_p := C._wrap_PACKAGE_URL_iplookup_cd10677ac3a321f0()
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

var PACKAGE_URL string = _swig_getPACKAGE_URL()

const PACKAGE_VERSION string = "1.2.3"
const STDC_HEADERS int = 1
const VERSION string = "1.2.3"
const BTREE_NODE_SIZE int = 4096

type SwigcptrIpitem uintptr

func (p SwigcptrIpitem) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIpitem) SwigIsIpitem() {
}

func (arg1 SwigcptrIpitem) SetStart(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_start_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_11)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetStart() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_start_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetEnd(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_end_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_13)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetEnd() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_end_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetIsp(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_isp_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_15)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetIsp() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_isp_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetXtype(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_Xtype_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_17)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetXtype() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_Xtype_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetCountry(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_country_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_19)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetCountry() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_country_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetProvince(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_province_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_21)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetProvince() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_province_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetCity(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_city_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_23)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetCity() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_city_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetDistrict(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_district_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_25)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetDistrict() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_district_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func (arg1 SwigcptrIpitem) SetDesc(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipitem_desc_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_27)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpitem) GetDesc() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipitem_desc_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewIpitem() (_swig_ret Ipitem) {
	var swig_r Ipitem
	swig_r = (Ipitem)(SwigcptrIpitem(C._wrap_new_ipitem_iplookup_cd10677ac3a321f0()))
	return swig_r
}

func DeleteIpitem(arg1 Ipitem) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ipitem_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
}

type Ipitem interface {
	Swigcptr() uintptr
	SwigIsIpitem()
	SetStart(arg2 string)
	GetStart() (_swig_ret string)
	SetEnd(arg2 string)
	GetEnd() (_swig_ret string)
	SetIsp(arg2 string)
	GetIsp() (_swig_ret string)
	SetXtype(arg2 string)
	GetXtype() (_swig_ret string)
	SetCountry(arg2 string)
	GetCountry() (_swig_ret string)
	SetProvince(arg2 string)
	GetProvince() (_swig_ret string)
	SetCity(arg2 string)
	GetCity() (_swig_ret string)
	SetDistrict(arg2 string)
	GetDistrict() (_swig_ret string)
	SetDesc(arg2 string)
	GetDesc() (_swig_ret string)
}

type SwigcptrIpinfo uintptr

func (p SwigcptrIpinfo) Swigcptr() uintptr {
	return (uintptr)(p)
}

func (p SwigcptrIpinfo) SwigIsIpinfo() {
}

func (arg1 SwigcptrIpinfo) SetStart(arg2 Ip) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ipinfo_start_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetStart() (_swig_ret Ip) {
	var swig_r Ip
	_swig_i_0 := arg1
	swig_r = (Ip)(SwigcptrIp(C._wrap_ipinfo_start_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetEnd(arg2 Ip) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2.Swigcptr()
	C._wrap_ipinfo_end_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.uintptr_t(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetEnd() (_swig_ret Ip) {
	var swig_r Ip
	_swig_i_0 := arg1
	swig_r = (Ip)(SwigcptrIp(C._wrap_ipinfo_end_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetIsp(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_isp_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetIsp() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_isp_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetXtype(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_Xtype_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetXtype() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_Xtype_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetCountry(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_country_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetCountry() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_country_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetProvince(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_province_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetProvince() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_province_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetCity(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_city_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetCity() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_city_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetDistrict(arg2 uint16) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_district_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), C.short(_swig_i_1))
}

func (arg1 SwigcptrIpinfo) GetDistrict() (_swig_ret uint16) {
	var swig_r uint16
	_swig_i_0 := arg1
	swig_r = (uint16)(C._wrap_ipinfo_district_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0)))
	return swig_r
}

func (arg1 SwigcptrIpinfo) SetDesc(arg2 string) {
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	C._wrap_ipinfo_desc_set_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_29)(unsafe.Pointer(&_swig_i_1)))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
}

func (arg1 SwigcptrIpinfo) GetDesc() (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	swig_r_p := C._wrap_ipinfo_desc_get_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func NewIpinfo() (_swig_ret Ipinfo) {
	var swig_r Ipinfo
	swig_r = (Ipinfo)(SwigcptrIpinfo(C._wrap_new_ipinfo_iplookup_cd10677ac3a321f0()))
	return swig_r
}

func DeleteIpinfo(arg1 Ipinfo) {
	_swig_i_0 := arg1.Swigcptr()
	C._wrap_delete_ipinfo_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0))
}

type Ipinfo interface {
	Swigcptr() uintptr
	SwigIsIpinfo()
	SetStart(arg2 Ip)
	GetStart() (_swig_ret Ip)
	SetEnd(arg2 Ip)
	GetEnd() (_swig_ret Ip)
	SetIsp(arg2 uint16)
	GetIsp() (_swig_ret uint16)
	SetXtype(arg2 uint16)
	GetXtype() (_swig_ret uint16)
	SetCountry(arg2 uint16)
	GetCountry() (_swig_ret uint16)
	SetProvince(arg2 uint16)
	GetProvince() (_swig_ret uint16)
	SetCity(arg2 uint16)
	GetCity() (_swig_ret uint16)
	SetDistrict(arg2 uint16)
	GetDistrict() (_swig_ret uint16)
	SetDesc(arg2 string)
	GetDesc() (_swig_ret string)
}

func Iconv_ext(arg1 Iconv_t, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1.Swigcptr()
	_swig_i_1 := arg2
	swig_r_p := C._wrap_iconv_ext_iplookup_cd10677ac3a321f0(C.uintptr_t(_swig_i_0), *(*C.swig_type_32)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

func Itoa(arg1 int, arg2 string) (_swig_ret string) {
	var swig_r string
	_swig_i_0 := arg1
	_swig_i_1 := arg2
	swig_r_p := C._wrap_itoa_iplookup_cd10677ac3a321f0(C.swig_intgo(_swig_i_0), *(*C.swig_type_34)(unsafe.Pointer(&_swig_i_1)))
	swig_r = *(*string)(unsafe.Pointer(&swig_r_p))
	if Swig_escape_always_false {
		Swig_escape_val = arg2
	}
	var swig_r_1 string
	swig_r_1 = swigCopyString(swig_r)
	return swig_r_1
}

type SwigcptrIn_addr uintptr
type In_addr interface {
	Swigcptr() uintptr
}

func (p SwigcptrIn_addr) Swigcptr() uintptr {
	return uintptr(p)
}

type SwigcptrIconv_t uintptr
type Iconv_t interface {
	Swigcptr() uintptr
}

func (p SwigcptrIconv_t) Swigcptr() uintptr {
	return uintptr(p)
}
